{
  "nomeCorso": "Algoritmi e strutture di dati",
  "docente": [
    {
      "first_name": "Gianluca",
      "second_name": "Rossi"
    }
  ],
  "annoAccademico": "2008-2009",
  "crediti": "6",
  "settore": "",
  "anno": "2",
  "semestre": "1",
  "propedeuticit\u00e0": "Nessuna",
  "comunicazioni": [],
  "lezioni": [],
  "materiale": [],
  "programma": "<table><tr><td>Si veda il blog del corso: http://algoritmiestrutturedati.blogspot.com/\r\n\r\nE' la naturale prosecuzione del corso di Elementi di Algoritmi e Strutture Dati, pertanto e' fortemente consigliato il superamento dell'esame in questione. Verranno studiati algoritmi fondamentali su grafi introducendo strutture dati fondamentali e tecniche di analisi e progetto di algoritmi. Infine verranno introdotti concetti elementari di teoria della complessita' computazionale.\r\n\r\nArgomenti trattati\r\n\r\n    * I grafi e le loro proprieta': Definizioni, visite, componenti connesse, cicli;\r\n\r\n    * Union-find;\r\n\r\n    * Problemi su grafi: Minimo albero ricoprente, Cammini minimi;\r\n\r\n    * Problemi computazionalmente difficili: Classe dei problemi NP,\r\n      problemi NP-completi, riducibilita' polinomiale, teorema di Cook, algoritmi di approssimazione per problemi di ottimizzazione HP-hard;\r\n\r\n\r\nProgramma dettagliato\r\n\r\n    * Grafi, definizioni preliminari: grafo diretto, non diretto, pesato sugli archi; grado di un nodo, grado entrante ed uscente per grafi diretti; grafi connessi, fortemente connessi, cicli; sottografi indotti; operazioni elementari sui grafi; rappresentazione dei grafi col calcolatore: liste di archi, liste di adiacenza, matrici di adiacenza; complessita' computazionale delle operazioni elementari per le diverse rappresentazioni.\r\n\r\n    * Visite di grafi: algoritmo di visita generica e sua correttezza; albero ricoprente indotto dalla visita; visita in ampiezza ed in profondita'; complessita' degli algoritmi di visita in base alla rappresentazione scelta per il grafo; proprieta' della visita in ampiezza, relazione tra livelli nell'albero ricoprente indotto dalla visita e distanza nel grafo dal nodo di partenza; utilizzo dell'algoritmo di visita per la ricerca di cicli; visite di grafi diretti, algoritmo per stabilire se un grafo e' fortemente connesso, calcolo delle componenti fortemente connesse di un grafo diretto.\r\n\r\n    * Minimo albero ricoprente di un grafo pesato sugli archi: taglio di un grafo; relazione tra minimo arco del taglio e appartenenza dell'arco al minimo albero ricoprente; relazione tra massimo arco in un ciclo e non appertenenza al minimo albero ricoprente; algoritmo di Kruskal per il calcolo del minimo albero ricoprente e sua correttezza; implementazione dell'algoritmo di Kruskal, mantenimento delle componenti connesse con foresta di alberi e implicazioni sulla complessita' temporale dell'algoritmo; Strutture Union-Find; implementazione dell'algoritmo di Kruskal con Union-Find; algoritmo di Prim, correttezza e complessita' di una implementazione di base, implementazione con code con priorita' e relativa complessita' e correttezza.\r\n\r\n    * Cammini Minimi su grafi pesati senza cicli di costo negativo: Proprieta' dei cammini minimi: minimalita' dei sotto-cammini, esistenza di cammini minimi semplici, disuguaglianza triangolare, condizione di Bellman. condizione necessaria e sufficiente per l'appartenenza di un arco ad un cammino minimo; alberi dei cammini minimi a partire da una sorgente fissata; esistenza dell'albero dei cammini minimi; Algoritmo di Bellman-Ford per il calcolo dell'albero dei cammini minimi; Algoritmo di Dijkstra per il calcolo dell'albero dei cammini minimi in grafi senza archi di costo negativo; Implementazione dell'algoritmo di Dijkstra con code con priorita' e relativa complessita'; Cammini minimi tra tutte le coppie, algoritmo di Floyd-Warshall.\r\n\r\n    * Riduzioni polinomiali: Problemi decisionali, Problema della Forte Connessione di Grafi e soluzione mediante riduzione polinomiale verso un problema di esistenza di arborescenze coprenti; Il problema del minimo insieme convesso; il problema del minimo insieme convesso non puo' essere risolto da un algoritmo con complessita' asintoticamente inferiore a n*log(n) a meno che un algoritmo con la stessa complessita' esista anche per il problema dell'ordinamento; riduzioni polinomiali tra problemi decisionali e loro proprieta'.\r\n\r\n    * NP-Completezza: Le classi P e NP; NP-Completezza; Teorema di Cook (senza dimostrazione) e NP-Completezza del problema della Soddisfacibilita' (Sat); Congettura P diverso NP; Riduzione da Sat a 3-Sat e NP-Completezza di 3-Sat; Riduzione da 3-Sat a Vertex Cover e NP-Completezza di Vertex Cover; Problemi di ottimizzazione con corrispondente decisionale NP-Completo; Algoritmi di approssimazione; Min Vertex Cover sua NP-hardness e algoritmo greedy 2-approssimante.\r\n\r\n\r\n\r\nModalita' d'esame: L'esame e' composto da una prova scritta che se giudicata sufficiente verra' seguita da un colloquio. </td></tr></table>",
  "testiRiferimento": "<table><tr><td>[1] Crescenzi, Gambosi, Grossi. \"Strutture di dati e algoritmi\", Pearson, Addison-Wesley.\r\n\r\n[2] Demetrescu, Finocchi, Italiano. \"Algoritmi e Strutture Dati\", McGraw-Hill\r\n\r\n\r\n[3] Kleinberg, Tardos. \"Algorithm Design\", Addison Wesley </td></tr></table>",
  "ricevimento": "<table><tr><td>Per appuntamento</td></tr></table>",
  "modalit\u00e0Esame": "<table><tr><td>null</td></tr></table>"
}