{
  "nomeCorso": "Sistemi cooperativi e reti sociali",
  "docente": [
    {
      "first_name": "Maurizio",
      "second_name": "Talamo"
    }
  ],
  "annoAccademico": "2016-2017",
  "crediti": "6",
  "settore": "INF/01",
  "anno": "2",
  "semestre": "2",
  "propedeuticit\u00e0": "Nessuna",
  "comunicazioni": [
    {
      "titolo": "",
      "data": "10-04-2017 15:07",
      "contenuto": "<p>Esercizio assegnato in classe: convertire in javascript il seguente codice C++</p>\n<p>\u00a0</p>\n<p>unsigned long long my_crc64 ( unsigned long long crc, const void *in_data, const unsigned long long len )</p>\n<p>{</p>\n<p>\u00a0 \u00a0 const unsigned char *data = ( const unsigned char * ) in_data;</p>\n<p>\u00a0 \u00a0 bool bit;</p>\n<p>\u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 for ( unsigned long long offset = 0; offset &lt; len; offset++ ) {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 unsigned char c = data[offset];</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 for ( unsigned char i = 0x01; i &amp; 0xff; i &lt;&lt;= 1 ) {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bit = crc &amp; 0x8000000000000000ULL;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if ( c &amp; i ) {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bit = !bit;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 crc &lt;&lt;= 1;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if ( bit ) {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 crc ^= 0xad93d23594c935a9ULL;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 crc &amp;= 0xffffffffffffffff;</p>\n<p>\u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 crc = crc &amp; 0xffffffffffffffff;</p>\n<p>\u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 unsigned long long lldata = crc;</p>\n<p>\u00a0 \u00a0 unsigned long long ret = lldata &amp; 0x01;</p>\n<p>\u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 for ( size_t i = 1; i &lt; 64; i++ ) {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 lldata &gt;&gt;= 1;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 ret = ( ret &lt;&lt; 1 ) | ( lldata &amp; 0x01 );</p>\n<p>\u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 return ret ^ 0x0000000000000000;</p>\n<p>}</p>\n<p>\u00a0</p>\n<p>Esempi di computazione:</p>\n<p>CRC64 di: kkpakcctdxcbzkitqkhpjuxzjkkmglic: 3594633785453865608()</p>\n<p>CRC64 di: htowzggrwbcnluckharxmpkdavtdebxa: 1704445542257955362()</p>\n<p>CRC64 di: dtgmlpqpuequujpdapakyqgmjoicfiej: 1895484199786374598()</p>\n<p>CRC64 di: zduyqawzaktxytnlgcpvtvmurifzyfct: 6381756506976712854()</p>\n<p>CRC64 di: jdjglslcrlljzuxcfylxrurvoypazzgx: 15446683081727556501()</p>\n<p>CRC64 di: voklxqugmpakrkjpfwookkbgkmaamxfb: 9227563173987463235()</p>\n<p>CRC64 di: ixjdfcjldfpjdbhywvmzdnazxsywolkb: 14728132559841017834()</p>\n<p>CRC64 di: dercabqqaoupzvxknokfgsialjywsvse: 16340863424746917193()</p>\n<p>CRC64 di: jzaxtfpuenzgnmfiuojpbqasdhcwnjvx: 10614787097834288068()</p>\n<p>CRC64 di: ejqjohhgcytacuwmxbnnhxjzvfafahmo: 3323273454950163853()</p>\n<p>CRC64 di: yooptqwtujgnuxkcmowkvkpgntixyjeq: 17616056958525969818()</p>\n<p>CRC64 di: tbkisjbfqttfquuuyfgdugdhehszniyv: 11124967955339586091()</p>\n<p>CRC64 di: jribhnnqelaufeqeajtfgclbafabveyq: 11310178939542944195()</p>\n<p>CRC64 di: cdcmopfichiltgpafghqjbetwlxkpdao: 12447702742421294748()</p>\n<p>CRC64 di: dvystytqcwkagjgnrjnyozldmhflrapp: 3768242662732765846()</p>\n<p>CRC64 di: eumzriwndwkmwaydvmzuebemmzbkdocg: 2693832937626661110()</p>\n<p>CRC64 di: xxkorztacmgswsmbctusesyxnovhpcwm: 4505874566712022915()</p>\n<p>CRC64 di: qcjkablbvifagwtzjyfvvxthbykntcua: 8183586054647984502()</p>\n<p>CRC64 di: pxvwaiwzlapswjlcugbzyayxlzzkxbmj: 3364362110700408844()</p>\n<p>CRC64 di: acxjgrywcuvioaurupenezhbivmsfobv: 10488603271136042429()</p>\n<p>CRC64 di: syxckvmcfmzwullqkqkkhgjhxofeeppw: 4948055503412834324()</p>\n<p>CRC64 di: olmyzxfqdnzinsdasfxmvkgngsdffmcz: 8494875643498249293()</p>\n<p>\u00a0</p>\n<p>\u00a0</p>"
    }
  ],
  "lezioni": [],
  "materiale": [],
  "programma": "<table><tr><td><p class=\"MsoNormalCxSpFirst\" style=\"font-family: -webkit-standard; line-height: normal;\">1) Introduzione di Complex Web attraverso analisi di contesti.</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">2) Definizione formale di Complex Web.</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">3) Studio dell propriet\u00e0 di un complex web</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">4) Definizione di meta regole per il riconoscimento di un sistema complesso.</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">5) Richiamo dei concetti di protocollo su rete.</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">6) Richiami sui protocolli IP, TCP, HTTP, SSL.</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">7) Un linguaggio basato sul riconoscimento delle stringhe</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">8) Ottenimento di sequenze elementari di eventi su WEB</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">9) Il modello degli stati</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">10) Il modello delle transizioni temporali</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">11) Dipendenza e causalit\u00e0</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">12) Il grafo causale.</p>\n<p class=\"MsoNormalCxSpMiddle\" style=\"font-family: -webkit-standard; line-height: normal;\">13) Rappresentazione di complex web come insieme di grafi causali.</p></td></tr></table>",
  "testiRiferimento": "<table><tr><td><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 10pt; line-height: normal; font-size: 11pt; font-family: Calibri;\">Dispense a cura del docente, distribuite durante le lezioni</p></td></tr></table>",
  "ricevimento": "<table><tr><td><p>su appuntamento richiesto via mail all'indirizzo maurizio.talamo@uniroma2.it</p></td></tr></table>",
  "modalit\u00e0Esame": "<table><tr><td><p class=\"MsoNormal\" style=\"margin: 0cm 0cm 10pt; line-height: 16.866666793823242px; font-size: 11pt; font-family: Calibri;\"><strong>Esame orale in cui si discute un progetto sviluppato durante le esercitazioni</strong></p></td></tr></table>"
}